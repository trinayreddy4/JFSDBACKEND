package com.gradingsystem.admin.service;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.gradingsystem.admin.DTO.AssignmentDTO;
import com.gradingsystem.admin.model.Assignment;
import com.gradingsystem.admin.model.Student;
import com.gradingsystem.admin.repository.AssignmentRepository;
import com.gradingsystem.admin.repository.StudentRepository;
import com.gradingsystem.admin.util.FileUtil;

@Service
public class AssignmentService {
	
	@Autowired
	private AssignmentRepository ar;
	
	@Autowired
	private StudentRepository sr;
	
	public Assignment convertToAssignment(AssignmentDTO a,String path)
	{
		return new Assignment(a.getName(),a.getDescription(),path,a.getDeadline());
	}
	public String createAssignment(AssignmentDTO a,MultipartFile File)
	{
		try {
		    // Step 1: Upload the file and get the path
		    String path = FileUtil.uploadFile(File);

		    // Check if the file path is valid
		    if (path == null || path.isEmpty()) {
		        return "File upload failed: Invalid file path.";
		    }

		    // Step 2: Convert the data to an Assignment
		    Assignment as = convertToAssignment(a, path);

		    // Step 3: Get the list of all students
		    List<Student> students = sr.findAll();
		    
		    // Step 4: Add the assignment to each student's list of assignments
		    for (Student student : students) {
		        student.getAssignments().add(as);  // Add the assignment to the student's assignments list
		    }

		    // Step 5: Save the assignment and all students
		    ar.save(as);  // Save the newly created assignment
		    sr.saveAll(students);  // Save all students after assigning the new assignment

		    // Step 6: Return a success message
		    return "Assignment Created Successfully";

		} catch (Exception e) {
		    // Catch and log other exceptions
		    e.printStackTrace();  // Optionally log the stack trace for debugging
		    return "An error occurred: " + e.getMessage();
		}


	}
	
//	public List<Assignment>
}
